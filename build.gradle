buildscript {
    ext {
        springBootVersion = '1.3.1.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management' 

jar {
    baseName = 'ecs-cf-service-broker'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

ext {
	version = '0.0.1'
	springCloudServiceBrokerVersion = '1.0.0.BUILD-SNAPSHOT'
}

dependencies {
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-jersey')
    compile(group: 'org.springframework.cloud', name: 'spring-cloud-cloudfoundry-service-broker',
    	version: springCloudServiceBrokerVersion)
	compile(group: 'org.springframework.boot', name: 'spring-boot-configuration-processor')
    compile(group: 'com.emc.ecs', name: 'object-client', version: '2.0.5')
    compile(group: 'org.springframework.cloud', name: 'spring-cloud-cloudfoundry-service-broker',
    	classifier: 'tests', version: springCloudServiceBrokerVersion)
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test')
    testCompile(group: 'com.nitorcreations', name: 'junit-runners', version: '1.3')
    testCompile(group: 'com.github.tomakehurst', name: 'wiremock', version: '1.57')
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

springBoot {
  executable = true
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

task simulate(type:JavaExec) {
	classpath sourceSets.test.runtimeClasspath
	main = "com.emc.ecs.apiSimulator.Server"
}

task testSuite(type: Test) {
   include '**/TestSuite.class'
   reports.junitXml.destination = "$buildDir/test-results/TestSuite"
   reports.html.destination = "$buildDir/test-results/TestSuite"
}