buildscript {
    ext {
        springBootVersion = '2.7.18' // 3.x requires Java 17
    }
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:1.1.0')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/libs-snapshot" }
    maven { url "https://maven.repository.redhat.com/earlyaccess/all/" }
    maven { url "https://maven.wso2.org/nexus/content/repositories/public/" }
}

ext {
    springCloudServiceBrokerVersion = '3.6.1'
}
ext['jackson-bom.version'] = '2.16.1'
ext['snakeyaml.version'] = '1.33.0.SP1-redhat-00001'

dependencies {
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-jersey', version: springBootVersion)
    implementation(group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: springBootVersion)
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springBootVersion)
    implementation(group: 'org.springframework.boot', name: 'spring-boot-devtools', version: springBootVersion)
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion)

    implementation(group: 'org.springframework.cloud', name: 'spring-cloud-starter-open-service-broker', version: springCloudServiceBrokerVersion) {
        exclude module: "log4j-slf4j-impl"
    }
    implementation(group: 'org.glassfish.jersey.media', name: 'jersey-media-jaxb', version: '2.39')
    implementation(group: 'com.google.guava', name: 'guava', version: '31.1.0.jre-redhat-00005')
    implementation(group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36')
    implementation(group: 'ch.qos.logback', name: 'logback-core', version: '1.4.14')
    implementation(group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.14')
    implementation(group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.20.0')
    implementation(group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.20.0')
    implementation(group: 'com.sun.jersey.contribs', name: 'jersey-apache-client4', version: '1.19.4')

    implementation(group: 'com.emc.ecs', name: 'object-client', version: '3.4.5')
    implementation(group: 'com.emc.ecs', name: 'bucket-wipe', version: '2.2.0') {
        exclude module: "log4j-slf4j-impl"
    }

    constraints {
        implementation(group: 'org.codehaus.jettison', name: 'jettison', version: '1.5.4')
    }

    dependencyManagement {
        dependencies {
            dependency group: 'org.springframework', name: 'spring-beans', version: '5.3.31-wso2v1'
        }
    }

    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion)
    testImplementation(group: 'junit', name: 'junit', version: '4.13.2')
    testImplementation(group: 'org.mockito', name: 'mockito-core', version: '2.28.2')
    testImplementation(group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9')
    testImplementation(group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.9')
    testImplementation(group: 'com.github.tomakehurst', name: 'wiremock-standalone', version: '2.27.2')
    testImplementation(group: 'com.github.paulcwarren', name: 'ginkgo4j', version: '1.0.15')
}

task wrapperOld(type: Wrapper) {
    gradleVersion = '7.5'
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

springBoot {
//  executable = true
}

task simulate(type: JavaExec) {
    classpath sourceSets.test.runtimeClasspath
    main = "com.emc.ecs.management.simulator.Server"
}

test {
    include '**/TestSuite.class'
    exclude 'com.emc.ecs.*.*.class'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
